class BotsList
{
    field Bot data;
    field BotsList next;
    field BotsList prev;
    field Objects map;

    field BotsList currentBot;
    field BotsList tempBot;
    field Bot bot;
    field Base base;

    constructor BotsList new(Bot _data, List _next)
    {
        let data = _data;
        let next = _next;
        return this;
    }

    method Bot getData()
    {
        return data;
    }

    method BotsList getNext()
    {
        return next;
    }
    method void setNext(BotsList _next)
    {
        let next = _next;
        return;
    }

    method BotsList getPrev()
    {
        return prev;
    }
    method void setPrev(BotsList _prev)
    {
        let prev = _prev;
        return;
    }

    method void setMap(Objects _map)
    {
        let currentBot = this;

        let map = _map;
        let base = map.getBase();

        while (~(currentBot = null))
        {
            let bot = currentBot.getData();
            if (bot.getAlive() = true)
            {
                do bot.setMap(map);
            }
            let currentBot = currentBot.getNext();
        }

        return;
    }

    method void drowBots(Game game)
    {
        var int countBots;

        let currentBot = this;
        let countBots = 0;
        while (~(currentBot = null))
        {
            let bot = currentBot.getData();
            if (bot.getAlive() = true)
            {
                let countBots = countBots + 1;
                do Drower.DrawBot(bot);
            }
            let currentBot = currentBot.getNext();
        }
        do game.setCountBots(countBots);

        return;
    }

    method void killBotsWithBullet(Bullet bullet)
    {
        var bool exit;

        let currentBot = this;
        let exit = false;
        while ( (~(currentBot = null)) & (~(exit)) )
        {
            let bot = currentBot.getData();
            if (bot.getAlive() = true)
            {
                if ( BulletCollisions.CheckCollisionsWithBot(bot, bullet, bullet.getX(), bullet.getY()) = true )
                {
                    do bot.setAlive(false);
                    do bullet.setAlive(false);
                    let exit = true;
                }
            }
            let currentBot = currentBot.getNext();
        }

        return;
    }

    method void removeDeadBotsFromList()
    {
        let currentBot = this;
        while (~(currentBot = null))
        {
            let tempBot = currentBot.getNext();

            let bot = currentBot.getData();
            if (bot.getAlive() = false)
            {
                do removeDeadBot(currentBot);
                //do currentBot.dispose();
            }

            let currentBot = tempBot;
        }

        return;
    }

    method void removeDeadBot(BotsList currentBot)
    {
        var BotsList botsList;
        var BotsList prevBot;
        var BotsList nextBot;

        let botsList = this;
        let prevBot = currentBot.getPrev();
        let nextBot = currentBot.getNext();

        if (~(prevBot = null))
        {
            do prevBot.setNext(nextBot);
            if (~(nextBot = null))
            {
                do nextBot.setPrev(prevBot);
            }
        }
        else
        {
            let botsList = botsList.getNext();
            if (~(botsList = null))
            {
                do botsList.setPrev(null);
            }
        }

        return;
    }

    method void moveBots()
    {
        var int xBot;
        var int yBot;
        var int xBase;
        var int yBase;

        let currentBot = this;

        let xBase = (base.getX() + base.getSize()) / 2;
        let yBase = (base.getY() + base.getSize()) / 2;
        while (~(currentBot = null))
        {
            let bot = currentBot.getData();
            if (bot.getAlive() = true)
            {
                let xBot = (bot.getX() + bot.getSize()) / 2;
                let yBot = (bot.getY() + bot.getSize()) / 2;
                
                if ((xBase - xBot) > 0) // Значит бот слева от базы
                {
                    if ((yBase - yBot + 50) > (xBase - xBot)) //dist по y до базы > dist по x до базы
                    {
                        do bot.setDirection(2); //down
                    }
                    else
                    {
                        do bot.setDirection(4); //right
                    }
                }
                else // Справа от базы
                {
                    if ((yBase - yBot + 50) > (xBot - xBase)) //dist по y до базы > dist по x до базы
                    {
                        do bot.setDirection(2); //down
                    }
                    else
                    {
                        do bot.setDirection(3); //left
                    }
                }

                do bot.moveBot();
            }
            let currentBot = currentBot.getNext();
        }

        return;
    }

    method void botsAtack()
    {
        let currentBot = this;
        while (~(currentBot = null))
        {
            let bot = currentBot.getData();
            if (bot.getAlive() = true)
            {
                do bot.Atack();
            }
            let currentBot = currentBot.getNext();
        }

        return;
    }

    method void dispose()
    {
        do Memory.deAlloc(this);
        return;
    }
}