class Objects
{
    field Player player;
    field BotsList botsList;
    field BricksList bricksList;
    field BulletsList bulletsList;

    constructor Objects new()
    {
        let player = null;
        let botsList = null;
        let bricksList = null;
        let bulletsList = null;
        return this;
    }

    method List getPlayer()
    {
        return player;
    }
    method void setPlayer(Player _player)
    {
        let player = _player;
        return;
    }

    method BotsList getBotsList()
    {
        return botsList;
    }
    method void addNewBot(Bot _bot) {
        let botsList = BotsList.new(_bot, botsList);
        return;
    }

    method BricksList getBricksList()
    {
        return bricksList;
    }
    method void addNewBrick(Brick _brick) {
        let bricksList = BricksList.new(_brick, bricksList);
        return;
    }

    method List getBulletsList()
    {
        return bulletsList;
    }

    method void addNewBullet(Bullet _bullet) {
        let bulletsList = BulletsList.new(_bullet, bulletsList);
        return;
    }

    method void drowAllObjects()
    {
        var BotsList currentBot;
        var BricksList currentBrick;
        var BulletsList currentBullet;

        do Drower.DrawPlayer(player);

        let currentBot = botsList;
        while (~(currentBot = null))
        {
            //do Drower.DrawBot(currentBot.getData());
            let currentBot = currentBot.getNext();
        }

        let currentBrick = bricksList;
        while (~(currentBrick = null))
        {
            do Drower.DrawBrick(currentBrick.getData());
            let currentBrick = currentBrick.getNext();
        }

        let currentBullet = bulletsList;
        while (~(currentBullet = null))
        {
            //do Drower.DrawBullet(currentBullet.getData());
            let currentBullet = currentBullet.getNext();
        }

        return;
    }

    method void dispose()
    {
        do Memory.deAAlloc(this);
        return;
    }
}