class Game {
    field Player player;  
    field Objects map;
    field ExitGame exitGame;
    field int levelNumber;
    field Level levels;

    constructor Game new(ExitGame _exitGame, int _levelNumber){
        let levelNumber = _levelNumber;
        let levels = Level.new();

        if (levelNumber = 1)
        {
            let map = levels.getFirstLevel();
            do map.setMap();
            do map.drowAllObjects();
            let player = map.getPlayer();
            let exitGame = _exitGame;
        }
        return this;
    }

    method void dispose(){
        
        //временное решение
        //do Screen.setColor(false);
        //do Screen.drawRectangle(0,0,200,200);
        //временное решение
        do Memory.deAlloc(this);
        return;
    }

    method void MoveKeyboard(char key){
        if (key = 131) { // Up
            do player.setDirection(1);
            do player.movePlayer();
        }

        if (key = 133) { // Down
            do player.setDirection(2);
            do player.movePlayer();
        }

        if (key = 130) { //Left
            do player.setDirection(3);
            do player.movePlayer();
        }

        if (key = 132) { //Right
            do player.setDirection(4);
            do player.movePlayer();
        }
        return;
    }

    method void run(){
        var char key;
        var boolean exitLevel;
        var Bullet newBullet;
        var int time;
        let time = 0;
        let exitLevel = false;

        while (~exitLevel){
            let key = Keyboard.keyPressed();



            if (key = 81) // Q - выйти
            {
                let exitLevel = true;
                do exitGame.setExitGame(true);
            }

            if (key = 49) // 1 Level (Нажать на 1)
            {
                do levels.setLevel(1);
                let exitLevel = true;
            }
            //( (time - ((time / 1000) * 1000)) = 0 )
            if (key = 32) // Space - пуля
            {
                if (time > player.getTimeBetweenAtacks())
                {
                    do player.Atack();
                    let time = 0;
                }
            }

            do MoveKeyboard(key);

            do map.ClearDeadBulletsFromList();
            do map.killObjects();
            do map.clearBullets();
            do map.moveBullets();
            do map.drowAllObjects();

            let time = time + 1;
        }
        return;
    }
}