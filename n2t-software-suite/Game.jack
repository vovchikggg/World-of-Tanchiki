class Game {//
    field Player player;
    field int player_x;
    field int player_y;
    field int player_size;
    field Map map;
    field int directionPlayer;

    constructor Game new(){
        let player = Player.new(180, 180, 30);
        let directionPlayer = 0;
        let player_x = player.getX();
        let player_y = player.getY();
    field Objects map;
    field char direction;

    constructor Game new(){
        var Level levels; 
        let levels = Level.new();
        let map = levels.getFirstLevel();
        let direction = 0;
        return this;
    }//

    method void dispose(){
        do player.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void movePlayer(){//

        if (directionPlayer = 1){do player.moveUp(); }
        if (directionPlayer = 2){do player.moveDown(); }
        if (directionPlayer = 3){do player.moveLeft(); }
        if (directionPlayer = 4){do player.moveRight(); }
        var Player player;
        let player = map.getPlayer();
        if (direction = 1){do player.moveUp(); }
        if (direction = 2){do player.moveDown(); }
        if (direction = 3){do player.moveLeft(); }
        if (direction = 4){do player.moveRight(); }

        do Sys.wait(5);
        return;
    }//

    method void MoveKeyboard(char key){
        if (key = 131) { // Up
            let directionPlayer = 1;
            do player.setDirection(1);
            do movePlayer();
        }

        if (key = 133) { // Down
            let directionPlayer = 2;
            do player.setDirection(2);
            do movePlayer();
        }

        if (key = 130) { //Left
            let directionPlayer = 3;
            do player.setDirection(3);
            do movePlayer();
        }

        if (key = 132) { //Right
            let directionPlayer = 4;
            do player.setDirection(4);
            do movePlayer();
        }
        return;
    }

    method void CraftBullet()
    {
        var Bullet bullet;
        var int x_bullet_Up_Down;
        var int y_bullet_Left_Right;

        let x_bullet_Up_Down = player_x + (player_size / 2) - 5; // координата player.X + размер / 2 - половина от размера пули
        let y_bullet_Left_Right = player_y + (player_size / 2) - 5; // координата player.Y + размер / 2 - половина от размера пули
        let player_x = player.getX();
        let player_y = player.getY();
        if (directionPlayer = 1){ //Up
            if (player_y - 20 < 0){return;}
            let bullet = Bullet.new(x_bullet_Up_Down, player_y - 20, directionPlayer, 10);
        }
        if (directionPlayer = 2){ //Down
            if (player_y + player_size + 20 > 256){return;}
            let bullet = Bullet.new(x_bullet_Up_Down, player_y + player_size + 20, directionPlayer, 10);
        }
        if (directionPlayer = 3){ //Left
            if (player_x - 20 < 0){return;}
            let bullet = Bullet.new(player_x - 20, y_bullet_Left_Right, directionPlayer, 10);
        }
        if (directionPlayer = 4){ //Right
            if (player_x + player_size + 20 > 512){return;}
            let bullet = Bullet.new(player_x + player_size + 20, y_bullet_Left_Right, directionPlayer, 10);
        }

        return;
    }

    method void run(){
        var char key;
        var boolean exit;
        let exit = false;

        while (~exit){
            while (key = 0){
                let key = Keyboard.keyPressed();
            }
            if (key = 81){
                let exit = true;
            }

            if (key = 32){ // Space = пуля
                //do CraftBullet();
                do player.Atack(directionPlayer);
            }

            do MoveKeyboard(key);

            while (~(key = 0)){
                let key = Keyboard.keyPressed();
                do MoveKeyboard(key);
            }
        }
        return;
    }
}