class Level
{
    field Objects firstLevel;
    field Objects secondLevel;
    field int levelNumber;

    constructor Level new()
    {
        // 1 Level
        let firstLevel = Objects.new();
        do firstLevel.setBase(Base.new(256, 256-32));
        do firstLevel.setPlayer(Player.new(224-16, 224, 30));
        do firstLevel.addNewBrick(Brick.new(224+32, 224-16));
        do firstLevel.addNewBrick(Brick.new(224+16, 224-16));
        do firstLevel.addNewBrick(Brick.new(224+16, 224));
        do firstLevel.addNewBrick(Brick.new(224+16, 224+16));

        do firstLevel.addNewBrick(Brick.new(224+32+16, 224-16));
        do firstLevel.addNewBrick(Brick.new(224+64, 224-16));
        do firstLevel.addNewBrick(Brick.new(224+64, 224));
        do firstLevel.addNewBrick(Brick.new(224+64, 224+16));

        do firstLevel.addNewBrick(Brick.new(100, 50));
        do firstLevel.addNewBrick(Brick.new(150, 50));
        do firstLevel.addNewBot(Bot.new(100, 100));
        do firstLevel.addNewBot(Bot.new(100, 100));

        // 2 Level
        let secondLevel = Objects.new();
        do secondLevel.setPlayer(Player.new(180, 180, 30));
        do secondLevel.addNewBrick(Brick.new(50, 50));
        do secondLevel.addNewBrick(Brick.new(100, 50));
        do secondLevel.addNewBrick(Brick.new(150, 50));
        do secondLevel.addNewBrick(Brick.new(200, 50));
        do secondLevel.addNewBrick(Brick.new(250, 50));
        do secondLevel.addNewBot(Bot.new(100, 100));
        do secondLevel.setBase(Base.new(224, 224));

        // 3 Level

        return this;
    }

    //method void BricksFirstLevel(firstLevel)
    //{
    //    do firstLevel.addNewBrick(Brick.new(50, 50));
    //    do firstLevel.addNewBrick(Brick.new(100, 50));
    //    do firstLevel.addNewBrick(Brick.new(150, 50));
    //}

    method List getFirstLevel()
    {
        return firstLevel;
    }

    method List getSecondLevel()
    {
        return secondLevel;
    }

    method void dispose()
    {
        do Memory.deAAlloc(this);
        return;
    }
}