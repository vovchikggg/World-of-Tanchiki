function Player.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Player.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Player.getX 0
push argument 0
pop pointer 0
push this 0
return
function Player.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Player.getY 0
push argument 0
pop pointer 0
push this 1
return
function Player.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Player.getDirection 0
push argument 0
pop pointer 0
push this 3
return
function Player.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Player.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 2
sub
pop this 1
label IF_FALSE0
push constant 0
return
function Player.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 2
add
pop this 1
label IF_FALSE0
push constant 0
return
function Player.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 2
sub
pop this 0
label IF_FALSE0
push constant 0
return
function Player.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 2
add
pop this 0
label IF_FALSE0
push constant 0
return
function Player.Atack 3
push argument 0
pop pointer 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
push constant 5
sub
pop local 1
push this 1
push this 2
push constant 2
call Math.divide 2
add
push constant 5
sub
pop local 2
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 20
sub
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 1
push this 1
push constant 20
sub
push argument 1
push constant 10
call Bullet.new 4
pop local 0
label WHILE_EXP0
push local 0
call Bullet.getY 1
push constant 1
gt
not
if-goto WHILE_END0
push local 0
call Bullet.moveUp 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push this 2
add
push constant 20
add
push constant 256
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
return
label IF_FALSE3
push local 1
push this 1
push this 2
add
push constant 20
add
push argument 1
push constant 10
call Bullet.new 4
pop local 0
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push constant 20
sub
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
return
label IF_FALSE5
push this 0
push constant 20
sub
push local 2
push argument 1
push constant 10
call Bullet.new 4
pop local 0
label IF_FALSE4
push argument 1
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push this 2
add
push constant 20
add
push constant 512
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
return
label IF_FALSE7
push this 0
push this 2
add
push constant 20
add
push local 2
push argument 1
push constant 10
call Bullet.new 4
pop local 0
label IF_FALSE6
push constant 0
return
function Player.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
