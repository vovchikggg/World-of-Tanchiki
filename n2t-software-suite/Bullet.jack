class Bullet
{
    field int x;
    field int y;
    field string direction;
    field bool alive;

    constructor Bullet new(int _x, int _y, string _direction)
    {
        let x = _x;
        let y = _y;
        let direction = _direction;
        let alive = true;
        return this;
    }

    method void move() {
        if (direction = "right")
        {
            let x = x + 4;
        }
        if (direction = "down")
        {
            let y = y + 4;
        }
        if (direction = "left")
        {
            let x = x - 4;
        }
        if (direction = "up")
        {
            let y = y - 4;
        }
        return;
    }

    method void kill()
    {
        var List current;
        let current = Map.botsMap();
        while (~(current = null))
        {
            let current.getData().alive() = false;
            let current = current.getNext();
        }

        let current = Map.bricksMap();
        while (~(current = null))
        {
            let current.getData().alive() = false;
            let current = current.getNext();
        }

        let current = Map.bulletsMap();
        while (~(current = null))
        {
            let current.getData().alive() = false;
            let current = current.getNext();
        }
        return;
    }

    method void dispose()
    {
        do Memory.deAAlloc(this);
        return;
    }
}