class Bullet
{
    field int x;
    field int y;
    field int direction;
    field int size;
    field bool alive;

    constructor Bullet new(int _x, int _y, int _direction, int _size)
    {
        let x = _x;
        let y = _y;
        let direction = _direction;
        let alive = true;
        let size = _size;
        do draw();
        return this;
    }

    //временные методы
    method void draw()
    {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
       return;
    }
    //временные методы

    //method void erase(){
    //    do Screen.setColor(false);
    //    do Screen.drawRectangle(x, y, x + size, y + size);
    //    return;
    //}


    method int getX()
    {
        return x;
    }

    method void setX(int _x)
    {
        let x = _x;
        return;
    }

    method int getY()
    {
        return y;
    }
    method void setY(int _y)
    {
        let y = _y;
        return;
    }

    method int getDirection()
    {
        return direction;
    }

    method bool getAlive()
    {
        return alive;
    }
    method void setAlive(bool _alive)
    {
        let alive = _alive;
        return;
    }

    method void moveUp()
    {
        //do Screen.setColor(true);
        //do Screen.drawRectangle(x + 20, y + 20, x + 30, y + 30);
        if (y > 1){
            do Screen.setColor(false);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
            let y = y - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + 1);
        } 
        do Sys.wait(5);
        return;
    }

     method void moveDown() {
        if ((y + size) < 254) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + 1);
            let y = y + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
        }
        do Sys.wait(5);
        return;
    }

    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
            let x = x - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + size);
        }
        do Sys.wait(5);
        return;
    }

    method void moveRight() {
        if ((x + size) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + size);
            let x = x + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
        }
        do Sys.wait(5);
        return;
    }

    //method void kill()
    //{
    //    var List current;
    //    let current = Map.getBotsMap();
    //    while (~(current = null))
    //    {
    //        let current.getData().setAlive(false);
    //        let current = current.getNext();
    //    }

    //    let current = Map.getBricksMap();
   //     while (~(current = null))
    //    {
     //       let current.getData().setAlive(false);
     //       let current = current.getNext();
    //    }
///
    //    let current = Map.getBulletsMap();
     //   while (~(current = null))
     //   {
     //       let current.getData.setAlive(false);
      //      let current = current.getNext();
      //  }
     //  return;
    //}

    method void dispose()
    {

        do Memory.deAAlloc(this);
        return;
    }
}