class BulletCollisions
{
    function bool CheckCollisionsWithPlayer(Player anotherPlayer, Bullet bullet, int newX, int newY)
    {
        if (~(anotherPlayer = bullet))
        {
            if ( (newX < (anotherPlayer.getX() + anotherPlayer.getSize()) ) & ( (newX + bullet.getSize()) > anotherPlayer.getX() ))
            {
                if ( (newY < (anotherPlayer.getY() + anotherPlayer.getSize()) ) & ( (newY + bullet.getSize()) > anotherPlayer.getY() ))
                {
                    return true;
                }
            }
        }
        return false;
    }

    function bool CheckCollisionsWithBot(Bot anotherBot, Bullet bullet, int newX, int newY)
    {
        if (~(anotherBot = bullet))
        {
            if ( (newX < (anotherBot.getX() + anotherBot.getSize()) ) & ( (newX + bullet.getSize()) > anotherBot.getX() ))
            {
                if ( (newY < (anotherBot.getY() + anotherBot.getSize()) ) & ( (newY + bullet.getSize()) > anotherBot.getY() ))
                {
                    return true;
                }
            }
        }
        return false;
    }

    function bool CheckCollisionsWithBrick(Brick anotherBrick, Bullet bullet, int newX, int newY)
    {
        if (~(anotherBrick = bullet))
        {
            if ( (newX < (anotherBrick.getX() + anotherBrick.getSize()) ) & ( (newX + bullet.getSize()) > anotherBrick.getX() ))
            {
                if ( (newY < (anotherBrick.getY() + anotherBrick.getSize()) ) & ( (newY + bullet.getSize()) > anotherBrick.getY() ))
                {
                    return true;
                }
            }
        }
        return false;
    }

    function bool CheckCollisionsWithBullet(Bullet anotherBullet, Bullet bullet, int newX, int newY)
    {
        if (~(anotherBullet.getX() = bullet.getX()))
        {
            if ( (newX < (anotherBullet.getX() + anotherBullet.getSize()) ) & ( (newX + bullet.getSize()) > anotherBullet.getX() ))
            {
                if ( (newY < (anotherBullet.getY() + anotherBullet.getSize()) ) & ( (newY + bullet.getSize()) > anotherBullet.getY() ))
                {
                    return true;
                }
            }
        }
        return false;
    }
}